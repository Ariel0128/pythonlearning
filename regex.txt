match() -------- > >> Determine if the RE matches at the beginning of the string.

search() ---------> >> Scan through a string, looking for any location where this RE matches.

findall() ---- ----->>> Find all substrings where the RE matches, and returns them as a list.

finditer()----->>> Find all substrings where the RE matches, and returns them as an iterator.

------

def fun(string):
    pattern = re.compile("^[\w-]+@[0-9a-zA-Z]+\.[a-z]{1,3}$")
    return pattern.match(string)

Note:
^               => begining of a string     
\w              => matches alphabets and numbers including 
underscore
-               => matches -
[\w-]           => will match either of them
[\w-]+          => means once or more than once

@               => match @
[0-9|a-z|A-Z]+  => match the given range of alphabets and numbers one or more than once
\.              => will match character .
[a-z]{1, 3}     => will match any string that has lowercase and 
length one, two or three
$               => end of a string


def verify_decimal(string):
    pattern=re.compile("^[+-]{0,1}[0-9]*\.[0-9]$")
    return bool(pattern.match(string))

Note:
[+-]            => will match either of them
{0,1}           => will match 0 次到 1 次， 也可以用 ？来代替
*               => will match 0 个 或 多个  --区别于+
bool()          => make the result to be boolean

---------
re.split(pattern, string) 
其中的pattern, 是指分割字符的标志，比如用逗号或者句号分割字符串，pattern处放的就是 “[,.]”
re.split(r"[,.]”, '100,000.000')  
的结果是 ['100','000','000']
